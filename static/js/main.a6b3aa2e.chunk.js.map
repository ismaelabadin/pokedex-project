{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","this","props","id","name","type","exp","url","slice","pad","className","src","alt","Component","Pokedex","pokemon","player","result","isWinner","map","poke","base_experience","Pokegame","hand1","hand2","length","idx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6b3aa2e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Pokecard.css';\n\nconst POKE_API = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n\nlet pad = (id) => (id <= 999 ? `00${id}`.slice(-3) : id)\n\nclass Pokecard extends Component {\n    render() {\n        const {id, name, type, exp} = this.props;\n        const url = `${POKE_API}${pad(id)}.png`;\n\n        return (\n            <div className=\"Pokecard\">\n                <h3 className=\"Pokecard-name\">{name}</h3>\n                <div className=\"Pokecard-img\">\n                    <img src={url} alt={name}/>\n                </div>\n                \n                <div className=\"Pokecard-data\">Type: {type} </div>\n                <div className=\"Pokecard-data\">EXP: {exp} </div>\n            </div>\n        );\n    }\n}\n\nexport default Pokecard;","import React, {Component} from 'react';\nimport Pokecard from './Pokecard';\nimport './Pokedex.css';\n\nclass Pokedex extends Component {\n    render() {\n        const pokemon = this.props.pokemon;\n        const player = <h1>{this.props.player}</h1>;\n        let result = \n            this.props.isWinner ? \n            <h1 className=\"Pokedex-winner\">Winning Hand!</h1> : \n            <h1 className=\"Pokedex-loser\">Losing Hand!</h1>\n        \n        return (\n            <div className=\"Pokedex\">\n                {player}\n                {result}\n                <h4>Total Experience: {this.props.exp}</h4>\n                <div className=\"Pokedex-cards\">\n                    {pokemon.map(poke => (\n                        <Pokecard id={poke.id} name={poke.name} type={poke.type} exp={poke.base_experience}/>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pokedex;","import React, {Component} from 'react';\nimport Pokedex from './Pokedex';\nimport './Pokegame.css';\n\nclass Pokegame extends Component {\n    static defaultProps = {\n        pokemon: \n        [\n            {id: 4, name: 'Charmander', type: 'fire', base_experience: 62},\n            {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\n            {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\n            {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\n            {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\n            {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\n            {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\n            {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\n        ]\n    }\n\n    render() {\n        let hand1 = [];\n        let hand2 = [...this.props.pokemon];\n        while (hand1.length < hand2.length) {\n            let idx = Math.floor(Math.random() * hand2.length);\n            let randPokemon = hand2.splice(idx, 1)[0];\n            hand1.push(randPokemon);\n        }\n\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n        let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n\n        return (\n            <div className=\"Pokegame\">\n                <Pokedex pokemon={hand1} exp={exp1} isWinner={exp1 > exp2} player=\"Player 1\"/>\n                <Pokedex pokemon={hand2} exp={exp2} isWinner={exp2 > exp1} player=\"Player 2\"/>\n            </div>\n        );\n    }\n}\n\nexport default Pokegame;","import React, {Component} from 'react';\nimport Pokegame from './Pokegame';\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Pokegame />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}